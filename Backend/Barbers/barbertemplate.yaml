AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  # Stack-Name: Barbera-Barbers
  # Hostname: https://0dy1hsrsu8.execute-api.ap-south-1.amazonaws.com/Prod
  # Hostname: https://we4imgw2ie.execute-api.ap-south-1.amazonaws.com/Prod  -----  Admin

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowHeaders: "'X-Forwarded-For,Authorization,Content-Type'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false

  #---------------------------------------------------------------
  # Barber Functions
  #---------------------------------------------------------------
  CreateNewLog:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: createnewlog.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /newlog
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  CoinsIncrease:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: coinincrease.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /coininc
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetCoins:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getcoins.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getcoins
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  # DistanceModeToggler:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src/
  #     Handler: distancemode.handler
  #     Runtime: nodejs12.x
  #     Events:
  #       apiForLambda:
  #         Type: Api 
  #         Properties:
  #           Path: /dismode
  #           Method: post
  #     Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  UpdateLog:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updatelog.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /updlog
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  ServiceEndOtpAccept:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: endservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /acceptendserv
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  ServiceStartOtpAccept:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: startservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /acceptstartserv
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------