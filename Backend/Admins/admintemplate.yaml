AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  # Stack-Name: Barbera-Admins
  # Hostname: https://xwtij1tqrc.execute-api.ap-south-1.amazonaws.com/Prod

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowHeaders: "'X-Forwarded-For,Authorization,Content-Type'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false

  #---------------------------------------------------------------
  # Barber Functions
  #---------------------------------------------------------------

  SendMail:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: sendmail.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /sendmail
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------
  
  GetAllBarberLogs:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getbarberlogs.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getlogs/{barberId}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetAllBarbers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getbarbers.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getbarbs
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  BookingRadius:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: bookingradius.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /bookradius
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetRadius:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getradius.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getradius
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------
