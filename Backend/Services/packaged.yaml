AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''POST, GET, OPTIONS'''
        AllowHeaders: '''X-Forwarded-For,Authorization,Content-Type'''
        AllowOrigin: '''*'''
        MaxAge: '''600'''
        AllowCredentials: false
  AddService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: addservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /addservice
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  DelService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: delservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /delservice/{serviceid}
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetServiceByID:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getservicebyid.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /getservbyid/{serviceid}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetAllServiceName:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getallservicenames.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /getallservname
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  UpdateService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: updateservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /updateservice
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetTrending:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: gettrending.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /gettrend
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetAllTypes:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getalltypes.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /getalltypes
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetServiceByCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getservicebycategory.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /gettypes/{category}
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetAllServices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getallservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /getallserv/{category}
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetSliders:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: getslider.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /getslider
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  GetTabs:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: gettabs.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /gettabs
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  SliderUploader:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: sliderimguploader.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /sliderupload
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  SliderDeleter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: sliderimgdeleter.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /sliderdelete
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  TypeImgUploader:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: typeimguploader.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /typeupload
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
  TypeImgDeleter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://barbera-buckets/19b7feb6f0902c6efb3fe232489ad18e
      Handler: typeimgdeleter.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api
          Properties:
            Path: /typedelete
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Role: arn:aws:iam::140544830924:role/BackendUser
