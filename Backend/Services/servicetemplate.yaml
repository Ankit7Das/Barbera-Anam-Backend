AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  # Stack-Name: Barbera-Services
  # Hostname: https://r54kj5iekh.execute-api.ap-south-1.amazonaws.com/Prod

  #---------------------------------------------------------------
  # Service Functions
  #---------------------------------------------------------------
  AddService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: addservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /addservice
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  DelService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: delservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /delservice/{serviceid}
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetServiceByID:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getservicebyid.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getservbyid/{serviceid}
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetAllServiceName:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getallservicenames.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getallservname
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  UpdateService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updateservice.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /updateservice
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetTrending:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: gettrending.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /gettrend
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetServiceByType:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getservicebytype.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getsubtypes/{category}
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetServiceByCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getservicebycategory.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /gettypes/{category}
            Method: get
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  GetServiceBySubType:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: getservicebysubtype.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /getallserv/{category}
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  SliderUploader:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: sliderimguploader.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /sliderupload
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  SliderDeleter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: sliderimgdeleter.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /sliderdelete
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  TypeImgUploader:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: typeimguploader.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /typeupload
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------

  TypeImgDeleter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: typeimgdeleter.handler
      Runtime: nodejs12.x
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /typedelete
            Method: post
      Role: arn:aws:iam::140544830924:role/BackendUser
  #---------------------------------------------------------------



            
  